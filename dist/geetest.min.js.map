{"version":3,"file":"geetest.min.js","sources":["../src/geetest.jsx"],"sourcesContent":["import React from 'react';\n\nexport default class Geetest extends React.Component {\n  static defaultProps = {\n    className: 'i-geetest',\n    // gt: '',\n    // challenge: '',\n    offline: false,\n    newCaptcha: true,\n    product: 'popup',\n    width: '300px',\n    lang: 'zh-cn',\n    https: false,\n    timeout: 30000,\n    // area: '',\n    nextWidth: '90%',\n    bgColor: 'black',\n    onReady: () => {},\n    onSuccess: () => {},\n    onError: () => {},\n    onClose: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.dom = null;\n    this.state = {\n      ins: null,\n      script: null,\n      timer: null,\n      count: 0,\n    };\n  }\n\n  // componentWillMount() {\n  //   const that = this;\n  //   console.log('componentWillMount', that.props, that.state);\n  // }\n\n  componentDidMount() {\n    const that = this;\n    // console.log('componentDidMount', that.props, that.state);\n    that.init();\n  }\n\n  // componentWillReceiveProps(nextProps) {\n  //   const that = this;\n  //   console.log('componentWillReceiveProps', that.props, nextProps);\n  // }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   const that = this;\n  //   // console.log('shouldComponentUpdate', that.props, nextProps, that.state, nextState);\n  //   return nextProps.challenge !== that.props.challenge;\n  // }\n\n  // componentWillUpdate(nextProps, nextState) {\n  //   const that = this;\n  //   console.log('componentWillUpdate', that.props, nextProps, that.state, nextState);\n  // }\n\n  componentDidUpdate(prevProps, prevState) {\n    const that = this;\n    // console.log('componentDidUpdate', prevProps, that.props, prevState, that.state);\n    that.init();\n  }\n\n  componentWillUnmount() {\n    const that = this;\n    // console.log('componentWillUnmount', that.props, that.state);\n    that.destroy();\n  }\n\n  init = () => {\n    const that = this;\n    // console.log('_init');\n    const id = 'react-geetest';\n\n    if (window.initGeetest) {\n      that.ready();\n      return;\n    }\n\n    if (document.getElementById(id)) {\n      that.wait();\n      return;\n    }\n\n    const ds = document.createElement('script');\n    ds.id = id;\n    ds.type = 'text/javascript';\n    ds.async = true;\n    ds.charset = 'utf-8';\n\n    if (ds.readyState) {\n      ds.onreadystatechange = () => {\n        if (ds.readyState === 'loaded' || ds.readyState === 'complete') {\n          ds.onreadystatechange = null;\n          that.ready();\n        }\n      };\n    } else {\n      ds.onload = () => {\n        ds.onload = null;\n        that.ready();\n      };\n    }\n\n    const protocol = window.location.protocol === 'http:' ? 'http:' : 'https:';\n    ds.src = `${protocol}//static.geetest.com/static/tools/gt.js?_t=${new Date().getTime()}`;\n    const s = document.getElementsByTagName('script')[0];\n    s.parentNode.insertBefore(ds, s);\n\n    that.setState({\n      script: ds,\n    });\n  };\n\n  wait = () => {\n    const that = this;\n    const { timer, count } = that.state;\n\n    if (timer || count > 0) {\n      return;\n    }\n\n    const newTimer = window.setInterval(() => {\n      if (window.initGeetest) {\n        window.clearInterval(newTimer);\n\n        that.setState({\n          timer: null,\n          count: 0,\n        });\n\n        window.setTimeout(that.ready.bind(that));\n        return;\n      }\n\n      let c = that.state.count;\n      c -= 1;\n\n      if (c < 1) {\n        window.clearInterval(newTimer);\n\n        that.setState({\n          timer: null,\n          count: 0,\n        });\n      } else {\n        that.setState({\n          count: c,\n        });\n      }\n    }, 100);\n\n    that.setState({\n      timer: newTimer,\n      count: 10,\n    });\n  };\n\n  ready = () => {\n    const that = this;\n    // console.log('_ready');\n    const {\n      gt,\n      challenge,\n      offline,\n      newCaptcha,\n      product,\n      width,\n      lang,\n      https,\n      timeout,\n      area,\n      nextWidth,\n      bgColor,\n    } = that.props;\n    const { ins } = that.state;\n\n    if (!window.initGeetest) {\n      return;\n    }\n\n    if (ins) {\n      that.load(ins);\n      return;\n    }\n\n    window.initGeetest(\n      {\n        gt,\n        challenge,\n        offline,\n        new_captcha: newCaptcha,\n        product,\n        width,\n        lang,\n        https,\n        timeout,\n        area,\n        next_width: nextWidth,\n        bg_color: bgColor,\n      },\n      geetest => {\n        that.load(geetest);\n\n        that.setState({\n          ins: geetest,\n        });\n      }\n    );\n  };\n\n  load = ins => {\n    const that = this;\n    // console.log('_load');\n\n    if (!that.dom) {\n      return;\n    }\n\n    const { onReady, onSuccess, onError, onClose } = that.props;\n\n    ins.appendTo(that.dom);\n\n    ins.onReady(onReady);\n    ins.onSuccess(() => onSuccess(ins.getValidate(), ins));\n    ins.onError(onError);\n    ins.onClose(onClose);\n  };\n\n  destroy = () => {\n    const that = this;\n    const { timer } = that.state;\n\n    if (timer) {\n      window.clearInterval(timer);\n    }\n\n    // that.state.script.parentNode.removeChild(that.state.script);\n    // that.setState({\n    //   ins: null,\n    //   script: null,\n    // });\n  };\n\n  render() {\n    const that = this;\n    // console.log('render');\n    const { className } = that.props;\n\n    return (\n      <div\n        className={className}\n        ref={e => {\n          that.dom = e;\n        }}\n      />\n    );\n  }\n}\n"],"names":["Geetest","props","that","id","window","initGeetest","ready","document","getElementById","wait","ds","createElement","type","async","charset","readyState","onreadystatechange","onload","protocol","location","src","Date","getTime","s","getElementsByTagName","parentNode","insertBefore","setState","script","state","timer","count","newTimer","setInterval","clearInterval","setTimeout","bind","c","gt","challenge","offline","newCaptcha","product","width","lang","https","timeout","area","nextWidth","bgColor","ins","load","new_captcha","next_width","bg_color","geetest","dom","onReady","onSuccess","onError","onClose","appendTo","getValidate","React","Component","this","init","prevProps","prevState","destroy","className","ref","e"],"mappings":"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"}